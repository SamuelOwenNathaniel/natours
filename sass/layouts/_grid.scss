.row{
    //max-width tries to fill as much of the available space as possbile. if the specified amount of px is available then that is used, else if the max available is smaller, it wil use all available.
    max-width: $grid-width; //1140 px is standard practice so we use 114rem
    margin: 0 auto; //center a block element inside another block element
    //margin-bottom: $gutter-vertical; //we move this from here and put it in the not(:last-child) selector

    /*set a new pseudo class to remove margin from under the last row
    this is effectively a better alternative to using lastchild
    Here we select everything except the last child. */
    &:not(:last-child){
        margin-bottom: $gutter-vertical;

        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include respond(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    @include clearfix;

    //attribute selector. The ^= means any that begins with. $= means any that ends with
    [class ^="col-"]{
        float: left;
        &:not(:last-child){
            margin-right: $gutter-horizontal;
            
            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        //for responsive design, eg on small phone screens, general practice is to convert columns to rows by having columns occupy full width.
        @include respond(tab-port){
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        //calc can be used with mix units eg rem, px, %
        //when using calc with scss, use: #{scss variable}
        width: calc((100% - #{$gutter-horizontal})/2);
    }

    .col-2-of-3 {
        width: calc(2*((100% - 2* #{$gutter-horizontal})/3) + #{$gutter-horizontal});
    }
    

    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal})/3);   
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal})/4);   
    }

    .col-2-of-4{
        width: calc(2*((100% - 3* #{$gutter-horizontal})/4) + #{$gutter-horizontal});   
    }

    .col-3-of-4{
        width: calc(3*((100% - 3* #{$gutter-horizontal})/4) + 2*#{$gutter-horizontal});   
    }

}

